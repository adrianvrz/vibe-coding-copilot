# -----------------------------------------------------------------------------
# Docker Compose configuration for Vibe Coding Copilot project
#
# Services:
#   1. vibe-dev:
#      - Development environment with hot reload.
#      - Uses the 'deps' build stage for faster builds.
#      - Mounts source code and node_modules for live updates.
#      - Watches src, public, and package.json for changes.
#      - Exposes port 3000.
#
#   2. vibe-prod:
#      - Production-ready service.
#      - Builds from the default Dockerfile target.
#      - Sets NODE_ENV to production.
#      - Includes a healthcheck using wget.
#      - Exposes port 3000.
#      - Restarts unless stopped.
#
#   3. nginx (optional):
#      - Nginx reverse proxy for production.
#      - Forwards HTTP (80) and HTTPS (443) traffic.
#      - Loads configuration from nginx.conf.
#      - Depends on vibe-prod.
#      - Enabled only in the 'production' profile.
#      - Restarts unless stopped.
#
# Usage:
#   - For development: use the 'vibe-dev' service.
#   - For production: use 'vibe-prod' and optionally 'nginx' with the 'production' profile.
# -----------------------------------------------------------------------------
version: '3.8'

services:
  # Development service with hot reload
  vibe-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps  # Use the deps stage for development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: sync
          path: ./public
          target: /app/public
        - action: rebuild
          path: package.json

  # Production service
  vibe-prod:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - vibe-prod
    profiles:
      - production
    restart: unless-stopped
